{"version":3,"file":"go-to-step.directive.d.ts","sources":["C:/a/FastNet/Web/FastNet.Web.Client/node_modules/angular-archwizard/lib/directives/go-to-step.directive.d.ts"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { StepId } from '../util/step-id.interface';\nimport { StepIndex } from '../util/step-index.interface';\nimport { StepOffset } from '../util/step-offset.interface';\nimport { WizardStep } from '../util/wizard-step.interface';\nimport { WizardComponent } from '../components/wizard.component';\n/**\n * The `awGoToStep` directive can be used to navigate to a given step.\n * This step can be defined in one of multiple formats\n *\n * ### Syntax\n *\n * With absolute step index:\n *\n * ```html\n * <button [awGoToStep]=\"{ stepIndex: absolute step index }\" (finalize)=\"finalize method\">...</button>\n * ```\n *\n * With unique step id:\n *\n * ```html\n * <button [awGoToStep]=\"{ stepId: 'step id of destination step' }\" (finalize)=\"finalize method\">...</button>\n * ```\n *\n * With a wizard step object:\n *\n * ```html\n * <button [awGoToStep]=\"wizard step object\" (finalize)=\"finalize method\">...</button>\n * ```\n *\n * With an offset to the defining step:\n *\n * ```html\n * <button [awGoToStep]=\"{ stepOffset: offset }\" (finalize)=\"finalize method\">...</button>\n * ```\n *\n * @author Marc Arndt\n */\nexport declare class GoToStepDirective {\n    private wizard;\n    private wizardStep;\n    /**\n     * This [[EventEmitter]] is called directly before the current step is exited during a transition through a component with this directive.\n     */\n    preFinalize: EventEmitter<void>;\n    /**\n     * This [[EventEmitter]] is called directly after the current step is exited during a transition through a component with this directive.\n     */\n    postFinalize: EventEmitter<void>;\n    /**\n     * The destination step, to which the wizard should navigate, after the component, having this directive has been activated.\n     * This destination step can be given either as a [[WizardStep]] containing the step directly,\n     * a [[StepOffset]] between the current step and the `wizardStep`, in which this directive has been used,\n     * or a step index as a number or string\n     */\n    targetStep: WizardStep | StepOffset | StepIndex | StepId;\n    /**\n     * Constructor\n     *\n     * @param wizard The wizard component\n     * @param wizardStep The wizard step, which contains this [[GoToStepDirective]]\n     */\n    constructor(wizard: WizardComponent, wizardStep: WizardStep);\n    /**\n     * A convenience field for `preFinalize`\n     */\n    /**\n    * A convenience name for `preFinalize`\n    *\n    * @param emitter The [[EventEmitter]] to be set\n    */\n    finalize: EventEmitter<void>;\n    /**\n     * Returns the destination step of this directive as an absolute step index inside the wizard\n     *\n     * @returns The index of the destination step\n     * @throws If `targetStep` is of an unknown type an `Error` is thrown\n     */\n    readonly destinationStep: number;\n    /**\n     * Listener method for `click` events on the component with this directive.\n     * After this method is called the wizard will try to transition to the `destinationStep`\n     */\n    onClick(event: Event): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;"}